name: build-and-publish
# - docker-image
# - deployment to BTP

on:
  push:
    branches:
      - release/8.5
    paths:
      # relevant
      - github/**
      - element-templates/**
      - src/**
      - Dockerfile
      - pom.xml
      # irrelevant
      - "!idea/**"
      - "!cap-bookshop/**"
      - "!examples/**"
      - "!*.java-version"
      - "!*.example"
      - "!*.md"

jobs:
  build-and-test:
    uses: ./.github/workflows/reusable-build-and-test.yml
    with:
      java-version: '21'
      distribution: 'temurin'
      maven-options: '-PcheckFormat package'
    secrets: inherit

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/consulting/ci/common DOCKERHUB_USER;
            secret/data/products/consulting/ci/common DOCKERHUB_PASSWORD;

      - name: set up jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: build
        run: mvn -B -PcheckFormat package --file pom.xml -DskipTests # as we've run the tests in the previous job

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: log in to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.secrets.outputs.DOCKERHUB_USER }}
          password: ${{ steps.secrets.outputs.DOCKERHUB_PASSWORD }}

      - name: extract release version
        id: extract_version
        # this extracts <version> from pom.xml into env.VERSION
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: sap-odata-connector - build and push docker image tag ${{ env.VERSION }}
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            CAMUNDA_CONNECTORS_VERSION=8.5.10
          push: true
          tags: |
            camunda/sap-odata-connector:${{ env.VERSION }}
#            camunda/sap-odata-connector:latest
          platforms: linux/amd64
          provenance: false


  deploy-to-btp:
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      connector_version: ${{ env.VERSION }}
      region: 'bru-2'
      cf_api_endpoint: 'https://api.cf.eu10-004.hana.ondemand.com'
      cf_org: camunda-dev
      cf_space: sap-integration
    secrets: inherit